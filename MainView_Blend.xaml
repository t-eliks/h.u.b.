<Window x:Class="HUB.Views.Blend.MainView_Blend"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HUB.Views.Blend"
        xmlns:localLogic="clr-namespace:HUB.Logic"
        xmlns:Converters="clr-namespace:HUB.Converters"
        xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
        mc:Ignorable="d"
        Title="MainView_Blend" Height="670" Width="1200" WindowStartupLocation="CenterScreen">
    <Window.Resources>

        <localLogic:BorderClipConverter x:Key="BorderClipConverter"/>

        <!-- TabControl Item & Panel Style -->

        <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="#252120"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                            <Border x:Name="mainBorder" BorderBrush="#1c1817" BorderThickness="1, 0" Background="{TemplateBinding Background}" Margin="0">
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#383331" Duration="0:0:.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.EnterActions>
                                <MultiDataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#252120" Duration="0:0:.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.ExitActions>
                            </MultiDataTrigger>
                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard Name="Storyboard">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#F1F1F2" Duration="0:0:.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <RemoveStoryboard BeginStoryboardName="Storyboard"/>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ListBox Templates & Styles -->

        <ItemsPanelTemplate x:Key="ListBoxItemLayoutTemplate">
            <WrapPanel IsItemsHost="True"/>
        </ItemsPanelTemplate>

        <!-- ListBox Item Styles -->

        <Color x:Key="ListBoxItemTemplateGridBackgroundGradient_EdgeColor">#1e1f26</Color>
        <Color x:Key="ListBoxItemTemplateGridBackgroundGradient_MiddleColor">#283655</Color>
        <Color x:Key="ListBoxItemTemplateGridBackgroundGradient_HighlightColor">#4D648D</Color>

        <Converters:StringToColorConverter x:Key="StringToColorConverter"/>

        <Style TargetType="TextBlock" x:Key="ListBoxItemTemplateTextBlock">
            <Setter Property="FontFamily" Value="{StaticResource TextFont}"/>
            <Setter Property="FontSize" Value="32"/>
            <Setter Property="Foreground" Value="#F1F1F2"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border Margin="10, 5" x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}" x:Key="IconButton">
            <Setter Property="Height" Value="64"/>
            <Setter Property="Width" Value="64"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
        </Style>

        <Style TargetType="Button" BasedOn="{StaticResource IconButton}" x:Key="SaveButton">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding UnsavedChanges}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Style that determines visibility based on a boolean -->
        <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}" x:Key="BooleanToVisibilityStyle">
            <Setter Property="Visibility" Value="Hidden"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding PopulatedGameList}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <SolidColorBrush Color="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, Path=DataContext.EdgeColor}" x:Key="EdgeColor"/>

    </Window.Resources>
    <Grid Background="#F1F1F2">
        <TabControl Background="Transparent" HorizontalAlignment="Stretch" ItemContainerStyle="{StaticResource TabItemStyle}">
            <TabControl.Template>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid Background="Transparent">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="8*"/>
                        </Grid.RowDefinitions>
                        <UniformGrid Columns="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Children.Count}" Background="Transparent" Grid.Row="0" IsItemsHost="True"/>
                        <Border Grid.Row="1" Padding="15">
                            <ContentPresenter Grid.Row="1" ContentSource="SelectedContent"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </TabControl.Template>
            <TabItem>
                <TabItem.Header>
                    <Image Source="/icons/controller.png"/>
                </TabItem.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="20"/>
                        <RowDefinition Height="5*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="Double-Click to launch application" Style="{StaticResource BooleanToVisibilityStyle}" FontSize="12" FontStyle="Italic" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <Grid Background="Transparent" Grid.Row="1">
                        <TextBlock Text="No games added yet." FontStyle="Italic" FontSize="36" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding PopulatedGameList}" Value="False">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <ListBox x:Name="GameListBox" ItemsSource="{Binding Games}" ItemsPanel="{StaticResource ListBoxItemLayoutTemplate}" ItemContainerStyle="{StaticResource ListBoxItemStyle}">
                            <ListBox.Resources>
                                <localLogic:BindingProxy x:Key="Proxy" Data="{Binding}"/>
                                <localLogic:BindingProxy x:Key="ProxySelectedItem" Data="{Binding ElementName=GameListBox, Path=SelectedItem}"/>
                            </ListBox.Resources>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Border>
                                        <Border.Effect>
                                            <DropShadowEffect ShadowDepth="0" BlurRadius="6" Color="Black"/>
                                        </Border.Effect>
                                        <Grid>
                                            <Border Name="mask" Background="White" CornerRadius="12"/>
                                            <DockPanel Width="250" Height="200">
                                                <DockPanel.OpacityMask>
                                                    <VisualBrush Visual="{Binding ElementName=mask}"/>
                                                </DockPanel.OpacityMask>
                                                <Image DockPanel.Dock="Top" Width="Auto" Height="150" Source="{Binding DisplayImage}" Stretch="Fill"/>
                                                <Grid Name="Gridd" DockPanel.Dock="Bottom">
                                                    <Grid.Style>
                                                        <Style TargetType="Grid">
                                                            <Setter Property="Background">
                                                                <Setter.Value>
                                                                    <LinearGradientBrush StartPoint="0, 0" EndPoint="1, 0">
                                                                        <GradientStop Color="{Binding Source={StaticResource EdgeColor}}" Offset="0.1"/>
                                                                        <GradientStop Color="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, Path=DataContext.MiddleColor}" Offset="0.2"/>
                                                                        <GradientStop Color="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, Path=DataContext.MiddleColor}" Offset="0.8"/>
                                                                        <GradientStop Color="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, Path=DataContext.EdgeColor}" Offset="0.9"/>
                                                                    </LinearGradientBrush>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=IsMouseOver}" Value="True">
                                                                    <DataTrigger.EnterActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation Storyboard.TargetProperty="Background.(GradientBrush.GradientStops)[0].(GradientStop.Offset)" From="0.1" To="0.03" Duration="0:0:.1"/>
                                                                                <ColorAnimation Storyboard.TargetProperty="Background.(GradientBrush.GradientStops)[0].(GradientStop.Color)" From="{StaticResource ListBoxItemTemplateGridBackgroundGradient_EdgeColor}" To="{StaticResource ListBoxItemTemplateGridBackgroundGradient_MiddleColor}" Duration="0:0:.3"/>
                                                                                <DoubleAnimation Storyboard.TargetProperty="Background.(GradientBrush.GradientStops)[1].(GradientStop.Offset)" From="0.2" To="0.1" Duration="0:0:.1"/>
                                                                                <ColorAnimation Storyboard.TargetProperty="Background.(GradientBrush.GradientStops)[1].(GradientStop.Color)" From="{StaticResource ListBoxItemTemplateGridBackgroundGradient_MiddleColor}" To="{StaticResource ListBoxItemTemplateGridBackgroundGradient_HighlightColor}" Duration="0:0:.3"/>
                                                                                <DoubleAnimation Storyboard.TargetProperty="Background.(GradientBrush.GradientStops)[2].(GradientStop.Offset)" From="0.8" To="0.9" Duration="0:0:.1"/>
                                                                                <ColorAnimation Storyboard.TargetProperty="Background.(GradientBrush.GradientStops)[2].(GradientStop.Color)" From="{StaticResource ListBoxItemTemplateGridBackgroundGradient_MiddleColor}" To="{StaticResource ListBoxItemTemplateGridBackgroundGradient_HighlightColor}" Duration="0:0:.3"/>
                                                                                <DoubleAnimation Storyboard.TargetProperty="Background.(GradientBrush.GradientStops)[3].(GradientStop.Offset)" From="0.9" To="0.97" Duration="0:0:.1"/>
                                                                                <ColorAnimation Storyboard.TargetProperty="Background.(GradientBrush.GradientStops)[3].(GradientStop.Color)" From="{StaticResource ListBoxItemTemplateGridBackgroundGradient_EdgeColor}" To="{StaticResource ListBoxItemTemplateGridBackgroundGradient_MiddleColor}" Duration="0:0:.3"/>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </DataTrigger.EnterActions>
                                                                    <DataTrigger.ExitActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation Storyboard.TargetProperty="Background.(GradientBrush.GradientStops)[0].(GradientStop.Offset)" From="0.03" To="0.1" Duration="0:0:.1"/>
                                                                                <ColorAnimation Storyboard.TargetProperty="Background.(GradientBrush.GradientStops)[0].(GradientStop.Color)" From="{StaticResource ListBoxItemTemplateGridBackgroundGradient_MiddleColor}" To="{StaticResource ListBoxItemTemplateGridBackgroundGradient_EdgeColor}" Duration="0:0:.3"/>
                                                                                <DoubleAnimation Storyboard.TargetProperty="Background.(GradientBrush.GradientStops)[1].(GradientStop.Offset)" From="0.1" To="0.2" Duration="0:0:.1"/>
                                                                                <ColorAnimation Storyboard.TargetProperty="Background.(GradientBrush.GradientStops)[1].(GradientStop.Color)" From="{StaticResource ListBoxItemTemplateGridBackgroundGradient_HighlightColor}" To="{StaticResource ListBoxItemTemplateGridBackgroundGradient_MiddleColor}" Duration="0:0:.3"/>
                                                                                <DoubleAnimation Storyboard.TargetProperty="Background.(GradientBrush.GradientStops)[2].(GradientStop.Offset)" From="0.9" To="0.8" Duration="0:0:.1"/>
                                                                                <ColorAnimation Storyboard.TargetProperty="Background.(GradientBrush.GradientStops)[2].(GradientStop.Color)" From="{StaticResource ListBoxItemTemplateGridBackgroundGradient_HighlightColor}" To="{StaticResource ListBoxItemTemplateGridBackgroundGradient_MiddleColor}" Duration="0:0:.3"/>
                                                                                <DoubleAnimation Storyboard.TargetProperty="Background.(GradientBrush.GradientStops)[3].(GradientStop.Offset)" From="0.97" To="0.9" Duration="0:0:.1"/>
                                                                                <ColorAnimation Storyboard.TargetProperty="Background.(GradientBrush.GradientStops)[3].(GradientStop.Color)" From="{StaticResource ListBoxItemTemplateGridBackgroundGradient_MiddleColor}" To="{StaticResource ListBoxItemTemplateGridBackgroundGradient_EdgeColor}" Duration="0:0:.3"/>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </DataTrigger.ExitActions>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Grid.Style>
                                                    <TextBlock Style="{StaticResource ListBoxItemTemplateTextBlock}" Text="{Binding Title}"/>
                                                </Grid>
                                            </DockPanel>
                                        </Grid>
                                        <Border.InputBindings>
                                            <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding DataContext.OpenGameCommand, RelativeSource={RelativeSource AncestorType=ListBox}}" CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource AncestorType=ListBox}}"/>
                                        </Border.InputBindings>
                                        <Border.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="Edit" Command="{Binding Source={StaticResource Proxy}, Path=Data.EditObjectCommand}" CommandParameter="{Binding Source={StaticResource ProxySelectedItem}, Path=Data}"/>
                                                <MenuItem Header="Remove" Command="{Binding Source={StaticResource Proxy}, Path=Data.RemoveObjectCommand}" CommandParameter="{Binding Source={StaticResource ProxySelectedItem}, Path=Data}"/>
                                            </ContextMenu>
                                        </Border.ContextMenu>
                                    </Border>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.Style>
                                <Style TargetType="ListBox">
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding PopulatedGameList}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ListBox.Style>
                        </ListBox>
                    </Grid>
                    <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Command="{Binding AddGameCommand}" Style="{StaticResource IconButton}">
                            <Button.Background>
                                <ImageBrush ImageSource="/Icons/add.png" Stretch="None"/>
                            </Button.Background>
                        </Button>
                        <Button Command="{Binding SerializeObjectsCommand}" Style="{StaticResource SaveButton}">
                            <Button.Background>
                                <ImageBrush ImageSource="/Icons/save.png" Stretch="None"/>
                            </Button.Background>
                        </Button>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <Image Source="/icons/wireless.png"/>
                </TabItem.Header>
                <Grid>
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="72" Text="Hello"/>
                </Grid>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <Image Source="/icons/misc.png"/>
                </TabItem.Header>
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="72" Text="Bye"/>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <Image Source="/icons/settings.png"/>
                </TabItem.Header>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
