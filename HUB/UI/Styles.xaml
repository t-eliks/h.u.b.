<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--#region COLORS-->

    <SolidColorBrush x:Key="BlackBackgroundBrush" Color="#252120"/>
    <Color x:Key="BlackBackgroundColor">#252120</Color>

    <SolidColorBrush x:Key="OffWhiteBackgroundBrush" Color="#F1F1F2"/>
    <Color x:Key="OffWhiteBackgroundColor">#F1F1F2</Color>

    <!--#endregion -->
    
    <!--#region BUTTONS-->
    
    <!-- Exit button style -->

    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}" x:Key="ExitButton">
        <Setter Property="Width" Value="64"/>
        <Setter Property="Height" Value="64"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <!-- Button backgrounds -->

    <LinearGradientBrush x:Key="BG1" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#2f2159" Offset="0.3"/>
        <GradientStop Color="#241b3d" Offset="0.9"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="BG2" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#3c2f63" Offset="0.3"/>
        <GradientStop Color="#2f2159" Offset="0.9"/>
    </LinearGradientBrush>

    <!-- {Choose...} Button style -->

    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}" x:Key="ChooseButton">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Margin" Value="5, 15"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Content" Value="Choose..."/>
        <Setter Property="FontFamily" Value="{DynamicResource Quicksand}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource BG1}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True">
                <Setter Property="Background" Value="{StaticResource BG2}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource ChooseButton}" x:Key="FinalButton">
        <Setter Property="Content" Value="Add"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=DataContext.EditMode}" Value="True">
                <Setter Property="Content" Value="Save changes"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="RadioButton" BasedOn="{StaticResource {x:Type RadioButton}}" x:Key="RadioButton">
        <Setter Property="Background" Value="Black"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="IsEnabled" Value="True"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding EditMode}" Value="True">
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}" x:Key="IconButton">
        <Setter Property="Height" Value="64"/>
        <Setter Property="Width" Value="64"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource IconButton}" x:Key="SaveButton">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding UnsavedChanges}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}" x:Key="SettingsButton">
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Background" Value="{DynamicResource BlackBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Margin" Value="5"/>
    </Style>

    <!--#endregion -->

    <!--#region ListBoxStyles-->

    <!-- Outside Border Gradient Brush -->

    <LinearGradientBrush x:Key="BorderBrush">
        <GradientStop Color="#001f3f" Offset="0.18"/>
        <GradientStop Color="#B10DC9" Offset="0.36"/>
        <GradientStop Color="#85144b" Offset="0.54"/>
        <GradientStop Color="#001f3f" Offset="0.72"/>
        <GradientStop Color="#B10DC9" Offset="0.90"/>
        <GradientStop Color="#85144b" Offset="1.0"/>
    </LinearGradientBrush>

    <Style TargetType="TextBlock" x:Key="ListBoxItemTemplateTextBlock">
        <Setter Property="FontFamily" Value="{DynamicResource Quicksand}"/>
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="Foreground" Value="{DynamicResource OffWhiteBackgroundBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- ListBox Item Styles -->

    <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Visibility" Value="Visible"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Margin="10, 5" x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=DataContext.Filtered, Mode=OneWay}" Value="True">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <!--#endregion -->

    <!--#region TabControlStyles-->

    <!-- TabControl Item & Panel Style -->
    
    <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Background" Value="{DynamicResource BlackBackgroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                        <Border x:Name="mainBorder" BorderBrush="#1c1817" BorderThickness="1, 0" Background="{TemplateBinding Background}" Margin="0">
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#383331" Duration="0:0:.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" To="{StaticResource BlackBackgroundColor}" Duration="0:0:.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Name="Storyboard">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" To="{StaticResource OffWhiteBackgroundColor}" Duration="0:0:.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="Storyboard"/>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion -->

    <!--#region MiscellaneousStyles-->

    <!-- Style that determines visibility based on a boolean -->
    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}" x:Key="BooleanToVisibilityStyle">
        <Setter Property="Visibility" Value="Hidden"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding PopulatedGameList}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <!--#endregion -->

    <!--#region Text Styles-->

    <!-- Window TitleBlock Style -->

    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}" x:Key="WindowTitle">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Margin" Value="0, 5"/>
        <Setter Property="FontFamily" Value="{DynamicResource Ubuntu}"/>
        <Setter Property="FontSize" Value="48"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Text" Value="Add a new item"/>
        <Setter Property="Foreground">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0, 0" EndPoint="1, 1">
                    <GradientStop Offset="0.2" Color="Purple"/>
                    <GradientStop Offset="0.8" Color="Red"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="1" Color="Black" BlurRadius="3" Opacity="0.6"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.EditMode}" Value="True">
                <Setter Property="Text" Value="Edit an item"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- TextBox label style (Title, Game launcher path...) -->

    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}" x:Key="TextLabel">
        <Setter Property="FontFamily" Value="{DynamicResource Quicksand}"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Padding" Value="20, 5"/>
        <Setter Property="Margin" Value="0, 13"/>
        <Setter Property="Width" Value="400"/>
    </Style>

    <!-- Settings TextBlock Style -->
    
    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}" x:Key="SettingsTextBlock">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontFamily" Value="{DynamicResource Quicksand}"/>
    </Style>

    <!--#endregion -->

    <!--#region TextBox Styles-->

    <!-- TextBox Style -->

    <Style TargetType="TextBox" x:Key="ShadowedTextBox">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FontFamily" Value="{DynamicResource Quicksand}"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="0" BlurRadius="10"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#b48fd2"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#573076"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TextBox Border Style -->

    <Style TargetType="Border" x:Key="TextBoxBorder">
        <Setter Property="Margin" Value="15, 15"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="Background" Value="{StaticResource OffWhiteBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ClipToBounds" Value="True"/>
        <Setter Property="Width" Value="400"/>
    </Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}" x:Key="SettingsTextBox">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="24"/>

    </Style>
    
    

    <!--#endregion -->
    
</ResourceDictionary>